{"version":3,"file":"static/js/422.33b5dbcc.chunk.js","mappings":"4NACA,EAA0B,wBAA1B,EAA8D,0BCA9D,G,QAAA,CAAgB,UAAY,0BAA0B,YAAc,8B,uCCoCpE,EA5Be,WACb,IAAMA,GAAWC,EAAAA,EAAAA,MACTC,GAAMC,EAAAA,EAAAA,MAAND,EAEFE,GAAcC,EAAAA,EAAAA,IAAYC,EAAAA,IAEhC,OACE,iBAAKC,UAAWC,EAAAA,UAAhB,WACE,kBACEC,GAAG,gBACHF,UAAWC,EAAAA,MACXE,YAAY,IACZC,MAAOP,EACPQ,SAAU,SAAAC,GAAC,OAAIb,GAASc,EAAAA,EAAAA,IAAUD,EAAEE,OAAOJ,OAAhC,EACXK,KAAK,UAEP,mBAAOC,QAAQ,gBAAf,UAAgCf,EAAE,UAAlC,SACCE,IACC,SAAC,MAAD,CACEc,KAAM,GACNC,QAAS,kBAAMnB,GAASc,EAAAA,EAAAA,IAAU,IAAzB,EACTP,UAAWC,EAAAA,gBAKpB,ECQD,EApCe,WACb,IAEIY,EACAC,EAHEC,GAAQjB,EAAAA,EAAAA,IAAYkB,EAAAA,IAClBrB,GAAMC,EAAAA,EAAAA,MAAND,EAaR,OAVIoB,EAAME,OAAS,IACjBJ,GAAK,OAAO,IAAIK,IAAIH,EAAMI,KAAI,qBAAGC,MAAH,MAC9BN,EAAiBD,EAAMQ,QAAO,SAACC,EAAKF,GAClC,OAAO,kBACFE,GADL,cAEGF,EAASL,EAAMQ,QAAO,SAAAC,GAAI,OAAIA,EAAKJ,SAAWA,CAApB,KAE9B,GAAE,CAAC,KAIJ,iCACE,eAAIpB,UAAWC,EAAf,SAAgCN,EAAE,aAClC,SAAC,EAAD,KACA,gBAAKK,UAAWC,EAAhB,SACGY,GACCA,EAAMM,KAAI,SAAAC,GACR,OACE,SAACK,EAAA,EAAD,CAEEV,MAAOD,EAAeM,GACtBM,MAAON,EACPA,OAAQA,GAHHA,EAMV,QAIV,C","sources":["webpack://goose_track/./src/pages/Canban/Canban.module.scss?d4a8","webpack://goose_track/./src/components/Filter/Filter.module.scss?573d","components/Filter/Filter.jsx","pages/Canban/Canban.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"listBox\":\"Canban_listBox__EdadR\",\"titleTask\":\"Canban_titleTask__1ljlu\"};","// extracted by mini-css-extract-plugin\nexport default {\"filterBox\":\"Filter_filterBox__pEV3n\",\"clearFilter\":\"Filter_clearFilter__FZIVG\"};","import React from 'react';\nimport scss from './Filter.module.scss';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\n\nimport { selectFilter } from 'redux/tasks/taskSelectors';\nimport { setFilter } from 'redux/tasks/taskSlice';\nimport { TiDeleteOutline } from 'react-icons/ti';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const { t } = useTranslation();\n\n  const filterValue = useSelector(selectFilter);\n\n  return (\n    <div className={scss.filterBox}>\n      <input\n        id=\"floatingInput\"\n        className={scss.input}\n        placeholder=\" \"\n        value={filterValue}\n        onChange={e => dispatch(setFilter(e.target.value))}\n        type=\"text\"\n      />\n      <label htmlFor=\"floatingInput\">{t('Search')}...</label>\n      {filterValue && (\n        <TiDeleteOutline\n          size={24}\n          onClick={() => dispatch(setFilter(''))}\n          className={scss.clearFilter}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Filter;\n","import { useSelector } from 'react-redux';\nimport { selectTasksByFilter } from 'redux/tasks/taskSelectors';\nimport TasksColumn from 'components/ChoosedDay/TasksColumn/TasksColumn';\nimport scss from './Canban.module.scss';\nimport Filter from 'components/Filter/Filter';\nimport { useTranslation } from 'react-i18next';\n\nconst Canban = () => {\n  const tasks = useSelector(selectTasksByFilter);\n  const { t } = useTranslation();\n  let clmns;\n  let tasksByColumns;\n  if (tasks.length > 0) {\n    clmns = [...new Set(tasks.map(({ column }) => column))];\n    tasksByColumns = clmns.reduce((acc, column) => {\n      return {\n        ...acc,\n        [column]: tasks.filter(task => task.column === column),\n      };\n    }, {});\n  }\n\n  return (\n    <>\n      <h1 className={scss.titleTask}>{t('Canban')}</h1>\n      <Filter />\n      <div className={scss.listBox}>\n        {clmns &&\n          clmns.map(column => {\n            return (\n              <TasksColumn\n                key={column}\n                tasks={tasksByColumns[column]}\n                title={column}\n                column={column}\n              />\n            );\n          })}\n      </div>\n    </>\n  );\n};\n\nexport default Canban;\n"],"names":["dispatch","useDispatch","t","useTranslation","filterValue","useSelector","selectFilter","className","scss","id","placeholder","value","onChange","e","setFilter","target","type","htmlFor","size","onClick","clmns","tasksByColumns","tasks","selectTasksByFilter","length","Set","map","column","reduce","acc","filter","task","TasksColumn","title"],"sourceRoot":""}